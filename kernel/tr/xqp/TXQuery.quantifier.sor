/* */

quantifierExpr! [in_context in_c] >[out_context out_c]:

	 ( #(AST_SOME #(AST_VAR_DECL v1:vardecl  {st1:sequenceType}  ie1:expr[in_c] >[out_c])
	             e1:expr[in_c] >[out_c])

	  <<ASTBase *var_type;
	    if(st1==NULL)
	       var_type=#["xs:anyType"];
	    else
	       var_type=st1;

	    #quantifierExpr=#(#["some"], 
	                      ie1,
	                      #(#["fun-def"], 
	                        #(#[], #(#[], var_type, v1)),
	                        e1));
	  >>

	| #(AST_EVERY #(AST_VAR_DECL v2:vardecl st2:sequenceType  ie2:expr[in_c] >[out_c])
	              e2:expr[in_c] >[out_c])

	  <<ASTBase *var_type;
	    if(st1==NULL)
	       var_type=#["xs:anyType"];
	    else
	       var_type=st1;

	    #quantifierExpr=#(#["every"], 
	                      ie2,
	                      #(#["fun-def"], 
	                        #(#[], #(#[], var_type, v2)),
	                        e2));
	  >>
	)

;

